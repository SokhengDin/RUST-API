//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "rooms")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub hotel_id: Uuid,
    pub room_number: String,
    pub room_type: String,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub price_per_night: Decimal,
    pub is_available: bool,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::bookings::Entity")]
    Bookings,
    #[sea_orm(
        belongs_to = "super::hotels::Entity",
        from = "Column::HotelId",
        to = "super::hotels::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Hotels,
}

impl Related<super::bookings::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Bookings.def()
    }
}

impl Related<super::hotels::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Hotels.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
