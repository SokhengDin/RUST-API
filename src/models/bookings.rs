//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use super::sea_orm_active_enums::BookingStatus;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "bookings")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub room_id: Uuid,
    pub guest_id: Uuid,
    pub check_in_date: DateTimeWithTimeZone,
    pub check_out_date: DateTimeWithTimeZone,
    #[sea_orm(column_type = "Decimal(Some((10, 2)))")]
    pub total_price: Decimal,
    pub status: BookingStatus,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::guests::Entity",
        from = "Column::GuestId",
        to = "super::guests::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Guests,
    #[sea_orm(
        belongs_to = "super::rooms::Entity",
        from = "Column::RoomId",
        to = "super::rooms::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Rooms,
}

impl Related<super::guests::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Guests.def()
    }
}

impl Related<super::rooms::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Rooms.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
